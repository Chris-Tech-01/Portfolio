@use "sass:map"; // Required for map.has-key() and map.get()

//////// Sass Map ////////

$colors: (
    neon-magneta          : #FF00D4,
    neon-magneta-bs       : 0 0 6px 6px rgba(255, 0, 255, 0.3),
    neon-magneta-bs-inset : inset 0 0 6px 6px rgba(255, 0, 255, 0.3),
    electric-blue         : #00F0FF,
    deep-indigo           : #15002B,
    cyber-purple          : #6E00FF,
    hot-pink              : #FF2EB2,
    tangerine-glow        : #FF6A00,
    sky-lavender          : #C08DFF
);

$breakpoints: (
    s  : 576px,
    m  : 768px,
    l  : 992px,
    xl : 1200px
);

//////// Mixins ////////

@mixin color($name, $property: color) {  // Mixin created called color. Sets a colour using a predefined name from the map and a property.
                                         // - $name: The key name in the $colors map (e.g. neon-magneta).
                                         // - $property: The CSS property to apply the color to (defaults to 'color').
    @if map.has-key($colors, $name) {    // Checks if the $colors map contains the key provided in $name (e.g @include color(sky-lavender)).
        $value: map.get($colors, $name); // If found, retrieves the color value from the map using the key, then stores the result in the $value variable.
        #{$property}: $value;            // Outputs the CSS declaration using the selected property and the color value.
    } @else {
        @warn "Color '#{$name}' not found in the $colors map."; // If not found then displays a warning message.
    }
}

@mixin mq($value) {                           // Mixin created called mq, sets a breakpoint using a predefined name from the map. 
                                              // - $value: The key name in the $breakpoints map. (e.g. s)
    @if map.has-key($breakpoints, $value) {   // Checks if the $breakpoints map contains the key provided in $value.
        $size: map.get($breakpoints, $value);  // If found, retrieves the size value from the map using the key, then stores it in the $size variable.
        @media (min-width: $size) {           // Creates a media query using the retrieved size.
            @content;                         // Injects whatever CSS is placed inside the @include.
        }
    } @else { 
        @error "unknown breakpoint '#{$breakpoints}'"; // If not found then displays a warning message.
    }
}
